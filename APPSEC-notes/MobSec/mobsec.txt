# Mobile Notes

# ADB

[+] sudo apt install adb

[Install adb]

[+] adb devices

[check connected andriod devices]

[+] adb connect device-IP

[connect a device to adb]

[+] adb -s 127.0.0.1:6555 shell

[use when you have more than 1 device connected]

[+] adb shell

[gain root access to device]

[+] adb push /file_path /sdcard/

- adb -s 127.0.0.1:6555 push "/home/ipsalmy/Downloads/app.apk" /sdcard/

[push file to connected device]

[+] adb shell ls /sdcard/

[list file in device]

[+] adb logcat

[Check adb log]

[+] adb install apk_name

[Install apps over adb]

[+] adb shell ps | grep frida

[check running frida services]

[+] adb shell pm list packages

[check app package name]

[+] frida-trace -U -f com.live.app -i '*Verify*'

[check if your bypass is working]

# Install Frida and all it's components

```bash
pipx install frida frida-tools objection
```

[+] frida -U -n com.package_name -l bypass_ssl.js

- frida -U -f com.live.walletwise -l bypass_ssl.js

[bypass ssl pinning]

# Install Objection

site: https://apktool.org/docs/install/

- Download apktool stuff and the apktool jar
- mv to /usr/local/bin and chmod the 2 files

[+] install java 

```bash
sudo apt install openjdk-17-jdk -y
```

[+] Run objection

```bash
sudo apt install pipx -y
pipx ensurepath
pipx install objection
```

[+] objection patchapk -s "app.apk" -a arm64

[remove SSL pinning without specified architecture]

## USE CASE

[+] adb -s 127.0.0.1:6555 shell getprop ro.product.cpu.abi

[Check architecture type from adb]

[+] objection patchapk -s "app.apk" -a x86

[patch app to bypass SSL pinning based on x86 architecture] 

# Hook frida script to app

[+] Download frida-server-andriod-x86 from release page 

- uncompress and adb push to /data/local/tmp on andriod
- rename the file to frida-server and chmod the file in the adb shell
- ./frida-server

[+] get a bypass script for your app technology and hook to package name 

```bash
frida -U -f com.live.app -l bypass_ssl.js
```

[+] to troubleshoot if it works….

```bash
frida-trace -U -f com.live.app -i '*Verify*'
```

# Proxy Andriod through Burp & Install certificate

[+] set burp ip address to your local host ip

- copy and paste this in your wifi advanced option with the port number
- visist burp on the emulator or download burp CA cert and adb push to your emulator’s /sdcards/
- save burp cert in .crt or .cer and go to settings on the emulator
- search for install certificate on the settings and install CA cert from file storage.
- Good to GO!
