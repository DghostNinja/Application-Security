# Flask

# Lesson 1

Basic page 

- @app.route ()- decorator

```python
from flask import Flask

app = Flask(__name__)

@app.route("/")
def home():
  return "Welcome home <h1>HELLO!</h1>"

if __name__ == "__main__":
  app.run()
```

Using <> in the function to pass words or desired URL inputs into the root(/) URL :

```python
from flask import Flask

app = Flask(__name__)

@app.route("/")
def home():
  return "Welcome home <h1>HELLO!</h1>"
  

@app.route("/<name>")
def user(name):
    return f"Hello {name}!"
   

if __name__ == "__main__":
  app.run()
```

Redirect pages using redirect and url_for libraries

```python
from flask import Flask, redirect, url_for

app = Flask(__name__)

@app.route("/")
def home():
  return "Welcome home <h1>HELLO!</h1>"
  

@app.route("/<name>")
def user(name):
    return f"Hello {name}!"
   

@app.route("/admin")
def admin():
    return redirect(url_for("home"))
    

if __name__ == "__main__":
  app.run()
```

Redirect to specific functions to take arguments 

```python
from flask import Flask, redirect, url_for

app = Flask(__name__)

@app.route("/")
def home():
  return "Welcome home <h1>HELLO!</h1>"
  

@app.route("/<name>")
def user(name):
    return f"Hello {name}!"
   

@app.route("/admin")
def admin():
    return redirect(url_for("user",  name="Admin!"))
    

if __name__ == "__main__":
  app.run()
```

# Lesson 2

HTML template 

Add templates folder in your working directory where your flask [app.py](http://app.py) is. Then out index.html into the templates folder

```python
from flask import Flask, redirect, url_for, render_template

app = Flask(__name__)

@app.route("/")
def home():
  return render_template("index.html")

if __name__ == "__main__":
  app.run()
```

index.html

```html
<!DOCTYPE html>
<html>
<head>
    <title>Welcome!</title>
</head>
<body>
    <h1>Home Page</h1>
    <p>Hello!</p>
</body>
</html>
```

To pass a test through url using the {{}} in the html body

```html
<!DOCTYPE html>
<html>
<head>
    <title>Welcome!</title>
</head>
<body>
    <h1>Home Page</h1>
    <p>{{content}}</p>
</body>
</html>
```

```python
from flask import Flask, redirect, url_for, render_template

app = Flask(__name__)

@app.route("/<name>")
def home(name):
  return render_template("index.html",  content=name)
  

if __name__ == "__main__":
  app.run()
```

- You can also pass in Python codes with {% your python code %}.

Pass a list 

```python
from flask import Flask, redirect, url_for, render_template

app = Flask(__name__)

@app.route("/<name>")
def home(name):
  return render_template("index.html",  content=["timi", "joel", "seyi"] )
  

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)
```

```html
<!DOCTYPE html>
<html>
<head>
    <title>Welcome!</title>
</head>
<body>
    <h1>Home Page</h1>
    {% for x in content %}
        <p>{{x}}</p>

    {% endfor %}
</body>
</html>
```

# Lesson 3

Template Inheritance

base.html

```html
<!DOCTYPE html>
<html>
 <head>
    <title>{% block title %}{% endblock %}</title>
  </head>
<body>
  <h1>My website</h1>
  {% block content %}
  {% endblock %}
</body>
</html>

```

index.html

```html
{% extends "base.html" %}
{% block title %}Home paage{% endblock %}
{% block content %}
<h1>Test this website well</h1>
{% endblock %}
```

app.py

```python
from flask import Flask, redirect, url_for, render_template

app = Flask(__name__)

@app.route("/")
def home():
  return render_template("index.html",  content="Testing")
  

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
```

# Adding bootstrap to Template

```python
from flask import Flask, redirect, url_for, render_template

app = Flask(__name__)

@app.route("/")
def home():
  return render_template("index.html",  content="Testing")
  

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
```

```html
<!DOCTYPE html>
<html>
 <head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <title>{% block title %}{% endblock %}</title>
  </head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
  <a class="navbar-brand" href="#">Navbar</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Link</a>
      </li>
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Dropdown
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <a class="dropdown-item" href="#">Action</a>
          <a class="dropdown-item" href="#">Another action</a>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="#">Something else here</a>
        </div>
      </li>
      <li class="nav-item">
        <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
      </li>
    </ul>
    <form class="form-inline my-2 my-lg-0">
      <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
      <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
  </div>
  </nav>

  <h1>My website</h1>
  {% block content %}
  {% endblock %}
  
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
</body>
</html>

```

```html
{% extends "base.html" %}
{% block title %}Home paage{% endblock %}
{% block content %}
<h1>Test this website well</h1>
{% endblock %}
```

# Lesson 4

HTTP METHODS

GET - less secure

POST - more secure

```python
from flask import Flask, redirect, url_for, render_template

app = Flask(__name__)

@app.route("/")
def home():
  return render_template("index.html")
  
@app.route("/login", methods=["POST", "GET"])
def login():
  return render_template("login.html")

@app.route("/<usr>")
def user(usr):
    return f"<h1>{usr}</h1>"

                              
if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
```

index.html

```html
{% extends "base.html" %}
{% block title %}Home paage{% endblock %}
{% block content %}
<h1>Test this website well</h1>
{% endblock %}
```

login.html

```html
{% extends "base.html" %}
{% block title %}Login{% endblock %}

{% block content %}
<form action="#" method="post">
  <p>Name:</p>
  <p><input type="text" name="nm"</p>
  <p><input type="submit" value="submit"</p>
</form>
{% endblock %}
```

# How to know what HTTP method was called

- add “request” lib

```python
from flask import Flask, redirect, url_for, render_template, request

app = Flask(__name__)

@app.route("/")
def home():
  return render_template("index.html")
  
@app.route("/login", methods=["POST", "GET"])
def login():
  if request.method == "POST":
    user = request.form["nm"]
    return redirect(url_for("user", usr=user)) # redirect to user page
  else:
    return render_template("login.html")

@app.route("/<usr>")
def user(usr):
    return f"<h1>{usr}</h1>"

                              
if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
```

index.html

```html
{% extends "base.html" %}
{% block title %}Home paage{% endblock %}
{% block content %}
<h1>Test this website well</h1>
{% endblock %}
```

login.html

```html
{% extends "base.html" %}
{% block title %}Login{% endblock %}

{% block content %}
<form action="#" method="post">
  <p>Name:</p>
  <p><input type="text" name="nm"</p>
  <p><input type="submit" value="submit"</p>
</form>
{% endblock %}
```

# Lesson 5

Sessions

```python
from flask import Flask, redirect, url_for, render_template, request, session

app = Flask(__name__)
app.secret_key = "l33t"  # Replace with a strong secret key in production

@app.route("/")
def home():
  return render_template("index.html")
  
@app.route("/login", methods=["POST", "GET"])
def login():
  if request.method == "POST":
    user = request.form["nm"]
    session["user"] = user
    return redirect(url_for("user"))
  else:
    return render_template("login.html")

@app.route("/user")
def user():
    if "user" in session:
        user = session["user"]
        return f"<h1>{user}</h1>"
    else:
        return redirect(url_for("login"))
    
if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
```

index.html

```html
{% extends "base.html" %}
{% block title %}Home paage{% endblock %}
{% block content %}
<h1>Test this website well</h1>
{% endblock %}
```

login.html

```html
{% extends "base.html" %}
{% block title %}Login{% endblock %}

{% block content %}
<form action="#" method="post">
  <p>Name:</p>
  <p><input type="text" name="nm"</p>
  <p><input type="submit" value="submit"</p>
</form>
{% endblock %}
```

Logging out — close sessions

modified [app.py](http://app.py) to handle logout

```python
from flask import Flask, redirect, sessions, url_for, render_template, request, session

app = Flask(__name__)
app.secret_key = "l33t"  # Replace with a strong secret key in production

@app.route("/")
def home():
  return render_template("index.html")
  
@app.route("/login", methods=["POST", "GET"])
def login():
  if request.method == "POST":
    user = request.form["nm"]
    session["user"] = user
    return redirect(url_for("user"))
  else:
    if "user" in session:
        return redirect(url_for("user"))
    return render_template("login.html")

@app.route("/user")
def user():
    if "user" in session:
        user = session["user"]
        return f"<h1>{user}</h1>"
    else:
        return redirect(url_for("login"))

@app.route("/logout")
def logout():
    session.pop("user", None)
    return redirect(url_for("login"))

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
```

Defining Permanent sessions

import datetime and timedelta to set session expiry

modified [app.py](http://app.py) 

```python
from flask import Flask, redirect, sessions, url_for, render_template, request, session
from datetime import timedelta

app = Flask(__name__)
app.secret_key = "l33t"  # Replace with a strong secret key in production
app.permanent_session_lifetime = timedelta(minutes=5)

@app.route("/")
def home():
  return render_template("index.html")
  
@app.route("/login", methods=["POST", "GET"])
def login():
  if request.method == "POST":
    session.permanent = True
    user = request.form["nm"]
    session["user"] = user
    return redirect(url_for("user"))
  else:
    if "user" in session:
        return redirect(url_for("user"))
    return render_template("login.html")

@app.route("/user")
def user():
    if "user" in session:
        user = session["user"]
        return f"<h1>{user}</h1>"
    else:
        return redirect(url_for("login"))

@app.route("/logout")
def logout():
    session.pop("user", None)
    return redirect(url_for("login"))

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
```

# Lesson 6

Message Flashing 

import flash

main.py

```python
from flask import Flask, redirect, sessions, url_for, render_template, request, session, flash
from datetime import timedelta

app = Flask(__name__)
app.secret_key = "l33t"  # Replace with a strong secret key in production
app.permanent_session_lifetime = timedelta(minutes=5)

@app.route("/")
def home():
  return render_template("index.html")
  
@app.route("/login", methods=["POST", "GET"])
def login():
  if request.method == "POST":
    session.permanent = True
    user = request.form["nm"]
    session["user"] = user
    flash("Login Successful!")
    return redirect(url_for("user"))
  else:
    if "user" in session:
        flash("Already Logged In!")
        return redirect(url_for("user"))
    return render_template("login.html")

@app.route("/user")
def user():
    if "user" in session:
        user = session["user"]
        return render_template("user.html", user=user)
    else:
        flash("You are not logged in!")
        return redirect(url_for("login"))

@app.route("/logout")
def logout():
    if "user" in session:
        user = session["user"]
        flash(f"You have been logged out, {user}", "info")
    session.pop("user", None)
    return redirect(url_for("login"))

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=8080)
```

user.html

```html
{% extends "base.html" %}
{% block title %}User{% endblock %}

{% block content %}
  {% with message = get_flashed_messages() %}
    {% if message %}
      {%for msg in message %}
        <p>{{ msg }}</p>
      {% endfor %}
    {%endif %}
  {% endwith %}
<h1>Hello {{ user }}</h1>
{% endblock %}
```

login.html

```html
{% extends "base.html" %}
{% block title %}Login{% endblock %}

{% block content %}
  {% with message = get_flashed_messages() %}
    {% if message %}
      {%for msg in message %}
        <p>{{ msg }}</p>
      {% endfor %}
    {%endif %}
  {% endwith %}
<form action="#" method="post">
  <p>Name:</p>
  <p><input type="text" name="nm"></p>
  <p><input type="submit" value="submit"</p>
</form>
{% endblock %}
```

index.html

```html
{% extends "base.html" %}
{% block title %}Home paage{% endblock %}
{% block content %}
<h1>Test this website well</h1>
{% endblock %}
```

# Lesson 7

Using SQLAlchemy Database 

import  sqlalchemy

[main.py](http://main.py) 

```python

```

index.html
